'''
이 문제를 해결하기 위해, 우리는 각 단계에서 가능한 x의 범위를 추적해야 합니다. 
2를 곱할 때마다 x의 가능한 최소값과 최대값이 변경될 것이므로, 각 단계에서 주어진 범위를 만족하는 x의 최소값과 최대값을 갱신해야 합니다.

초기 x의 범위는 1부터 시작하는 것으로 가정할 수 있으며, 각 단계에서 x의 범위는 2배로 증가하게 됩니다. 
각 단계에서 주어진 a_i, b_i에 대해, 가능한 x의 최소값은 max(현재 최소값*2, a_i)이고, 가능한 x의 최대값은 min(현재 최대값*2, b_i)입니다.
'''

n = int(input())

# x의 초기 최소값과 최대값 설정
min_x, max_x = 1, 1

# n번의 범위 정보를 받으며 x의 가능한 범위 갱신
for _ in range(n):
    a, b = map(int, input().split())

    # 현재 단계에서 가능한 x의 최소값과 최대값 갱신
    min_x = max(min_x * 2, a)
    max_x = min(max_x * 2, b)

    # 만약 현재 단계에서 x의 범위가 유효하지 않다면, 조건을 만족할 수 없음
    if min_x > max_x:
        print("No possble x")
        break

# 모든 조건을 만족하는 x 중 최소값 출력
else:
    print(min_x // 2) # 최종 min_xf를 2로 나눈 몫이 초기 x의 최솟값